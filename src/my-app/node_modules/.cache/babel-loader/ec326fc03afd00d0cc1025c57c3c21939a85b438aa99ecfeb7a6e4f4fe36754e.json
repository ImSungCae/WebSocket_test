{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\home\\\\Desktop\\\\isc\\\\isc_new\\\\workspace\\\\intelliJ_workspace\\\\webSocket_test\\\\src\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Stomp } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 웹소켓 연결 객체\n  const stompClient = useRef(null);\n  // 메시지 리스트\n  const [messages, setMessages] = useState([]);\n  // 사용자 입력을 저장할 변수\n  const [inputValue, setInputValue] = useState('');\n  // 입력 필드에 변화가 있을 때 마다 inputValue를 업데이트\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const connect = () => {\n    const socket = new WebSocket(\"ws://localhost:8080/ws\");\n    stompClient.current = Stomp.over(socket);\n    stompClient.current.connect({}, () => {\n      // 메시지 수신(1은 roomId를 임시로 표현)\n      stompClient.current.subscribe(`/sub/chatroom/1`, message => {\n        // 누군가 발생했던 메시지를 리스트에 추가\n        const newMessage = JSON.parse(message.body);\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n    });\n  };\n  const fetchMessages = () => {\n    return axios.get(\"http://localhost:8080/chat/1\").then(response => {\n      setMessages(response.data);\n    });\n  };\n  const disconnect = () => {\n    if (stompClient.current) {\n      stompClient.current.disconnect();\n    }\n  };\n  useEffect(() => {\n    connect();\n    fetchMessages();\n    // 컴포넌트 언마운트 시 웹소켓 연결 해제\n    return () => disconnect();\n  }, []);\n\n  // 메시지 전송\n  const sendMessage = () => {\n    if (stompClient.current && inputValue) {\n      // 현재로서는 임의의 테스트 값을 삽입\n      const body = {\n        id: 1,\n        name: \"테스트1\",\n        message: inputValue\n      };\n      stompClient.current.send(`/pub/message`, {}, JSON.stringify(body));\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: {\n            handleInputChange\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), messages.map((item, index) => {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: item.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DexXA0LsVW6LtXYT/psQlrceoFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useEffect","useState","useRef","Stomp","jsxDEV","_jsxDEV","App","_s","stompClient","messages","setMessages","inputValue","setInputValue","handleInputChange","event","target","value","connect","socket","WebSocket","current","over","subscribe","message","newMessage","JSON","parse","body","prevMessages","fetchMessages","get","then","response","data","disconnect","sendMessage","id","name","send","stringify","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","className","_c","$RefreshReg$"],"sources":["C:/Users/home/Desktop/isc/isc_new/workspace/intelliJ_workspace/webSocket_test/src/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Stomp } from \"@stomp/stompjs\";\n\nfunction App() {\n  // 웹소켓 연결 객체\n  const stompClient = useRef(null);\n  // 메시지 리스트\n  const [messages, setMessages] = useState([]);\n  // 사용자 입력을 저장할 변수\n  const [inputValue, setInputValue] = useState('');\n  // 입력 필드에 변화가 있을 때 마다 inputValue를 업데이트\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const connect = () => {\n    const socket = new WebSocket(\"ws://localhost:8080/ws\");\n    stompClient.current = Stomp.over(socket);\n    stompClient.current.connect({}, () => {\n      // 메시지 수신(1은 roomId를 임시로 표현)\n      stompClient.current.subscribe(`/sub/chatroom/1`, (message) => {\n        // 누군가 발생했던 메시지를 리스트에 추가\n        const newMessage = JSON.parse(message.body);\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\n      });\n    });\n  };\n\n  const fetchMessages = () => {\n    return axios.get(\"http://localhost:8080/chat/1\")\n        .then(response => {setMessages(response.data)});\n  }\n\n  const disconnect = () => {\n    if(stompClient.current){\n      stompClient.current.disconnect();\n    }\n  }\n\n\n  useEffect(() => {\n    connect();\n    fetchMessages();\n    // 컴포넌트 언마운트 시 웹소켓 연결 해제\n    return () => disconnect();\n  }, []);\n\n  // 메시지 전송\n  const sendMessage = () => {\n    if(stompClient.current && inputValue){\n      // 현재로서는 임의의 테스트 값을 삽입\n      const body = {\n        id : 1,\n        name : \"테스트1\",\n        message : inputValue\n      };\n      stompClient.current.send(`/pub/message`, {}, JSON.stringify(body));\n      setInputValue('');\n    }\n  }\n\n\n  return (\n    <div>\n      <ul>\n        <div>\n          {/* 입력 필드 */}\n          <input\n              type=\"text\"\n              value={inputValue}\n              onChange={{handleInputChange}}\n          />\n          {/* 메시지 전송, 메시지 리스트에 추가 */}\n          <button onClick={sendMessage}>입력</button>\n        </div>\n        {/* 메시지 리스트 출력 */}\n        {messages.map((item,index) => {\n          <div key={index} className=\"list-item\">{item.message}</div>\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}