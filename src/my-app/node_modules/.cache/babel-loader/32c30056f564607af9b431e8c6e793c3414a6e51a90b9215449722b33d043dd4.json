{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\home\\\\Desktop\\\\isc\\\\isc_new\\\\workspace\\\\intelliJ_workspace\\\\webSocket_test\\\\src\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Stomp } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 웹소켓 연결 객체\n  const stompClient = useRef(null);\n  // 메시지 리스트\n  const [messages, setMessages] = useState([]);\n  // 사용자 입력을 저장할 변수\n  const [inputValue, setInputValue] = useState('');\n  // 입력 필드에 변화가 있을 때 마다 inputValue를 업데이트\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // 메시지 전송\n  const sendMessage = () => {\n    if (stompClient.current && inputValue) {\n      // 현재로서는 임의의 테스트 값을 삽입\n      const body = {\n        id: 1,\n        name: \"테스트1\",\n        message: inputValue\n      };\n      stompClient.current.send(`/pub/message`, {}, JSON.stringify(body));\n      setInputValue('');\n    }\n  };\n  useEffect(() => {\n    connect();\n    fetchMessages();\n    // 컴포넌트 언마운트 시 웹소켓 연결 해제\n    return () => disconnect();\n  }, []);\n  const connect = () => {\n    const socket = new WebSocket(\"ws://localhost:8080/ws\");\n    stompClient.current = Stomp.over(socket);\n    stompClient.current.connect({}, () => {\n      // 메시지 수신(1은 roomId를 임시로 표현)\n      stompClient.current.subscribe(`/sub/chatroom/1`, message => {\n        // 누군가 발생했던 메시지를 리스트에 추가\n        const newMessage = JSON.parse(message.body);\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n      });\n    });\n  };\n  const fetchMessages = () => {\n    return axios.get(\"http://localhost:8080/chat/1\").then(response => {\n      setMessages(response.data);\n    });\n  };\n  const disconnect = () => {\n    if (stompClient.current) {\n      stompClient.current.disconnect();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: {\n            handleInputChange\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), messages.map((item, index) => {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: item.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DexXA0LsVW6LtXYT/psQlrceoFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useEffect","useState","useRef","Stomp","jsxDEV","_jsxDEV","App","_s","stompClient","messages","setMessages","inputValue","setInputValue","handleInputChange","event","target","value","sendMessage","current","body","id","name","message","send","JSON","stringify","connect","fetchMessages","disconnect","socket","WebSocket","over","subscribe","newMessage","parse","prevMessages","get","then","response","data","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","index","className","_c","$RefreshReg$"],"sources":["C:/Users/home/Desktop/isc/isc_new/workspace/intelliJ_workspace/webSocket_test/src/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Stomp } from \"@stomp/stompjs\";\n\nfunction App() {\n  // 웹소켓 연결 객체\n  const stompClient = useRef(null);\n  // 메시지 리스트\n  const [messages, setMessages] = useState([]);\n  // 사용자 입력을 저장할 변수\n  const [inputValue, setInputValue] = useState('');\n  // 입력 필드에 변화가 있을 때 마다 inputValue를 업데이트\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  // 메시지 전송\n  const sendMessage = () => {\n    if(stompClient.current && inputValue){\n      // 현재로서는 임의의 테스트 값을 삽입\n      const body = {\n        id : 1,\n        name : \"테스트1\",\n        message : inputValue\n      };\n      stompClient.current.send(`/pub/message`, {}, JSON.stringify(body));\n      setInputValue('');\n    }\n  }\n\n  useEffect(() => {\n    connect();\n    fetchMessages();\n    // 컴포넌트 언마운트 시 웹소켓 연결 해제\n    return () => disconnect();\n  }, []);\n\n  const connect = () => {\n      const socket = new WebSocket(\"ws://localhost:8080/ws\");\n      stompClient.current = Stomp.over(socket);\n      stompClient.current.connect({}, () => {\n          // 메시지 수신(1은 roomId를 임시로 표현)\n          stompClient.current.subscribe(`/sub/chatroom/1`, (message) => {\n            // 누군가 발생했던 메시지를 리스트에 추가\n            const newMessage = JSON.parse(message.body);\n            setMessages((prevMessages) => [...prevMessages, newMessage]);\n        });\n      });\n  };\n\n  const fetchMessages = () => {\n      return axios.get(\"http://localhost:8080/chat/1\")\n          .then(response => {setMessages(response.data)});\n  }\n\n  const disconnect = () => {\n    if(stompClient.current){\n      stompClient.current.disconnect();\n    }\n  }\n\n  return (\n    <div>\n      <ul>\n        <div>\n          {/* 입력 필드 */}\n          <input\n              type=\"text\"\n              value={inputValue}\n              onChange={{handleInputChange}}\n          />\n          {/* 메시지 전송, 메시지 리스트에 추가 */}\n          <button onClick={sendMessage}>입력</button>\n        </div>\n        {/* 메시지 리스트 출력 */}\n        {messages.map((item,index) => {\n          <div key={index} className=\"list-item\">{item.message}</div>\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}